{"version":3,"sources":["api/table.js","views/table/forms/editForm.jsx","views/table/index.jsx"],"names":["tableList","data","request","url","method","deleteItem","editItem","moment","locale","EditForm","this","props","visible","onCancel","onOk","form","confirmLoading","currentRowData","getFieldDecorator","id","author","date","readings","star","status","title","formItemLayout","labelCol","sm","span","wrapperCol","Item","label","initialValue","disabled","rules","required","message","placeholder","length","count","style","width","Option","value","type","showTime","format","Component","Form","create","name","Column","Table","Panel","Collapse","TableComponent","_isMounted","state","list","loading","total","listQuery","pageNumber","pageSize","editModalVisible","editModalLoading","fetchData","setState","then","response","items","filterTitleChange","e","target","filterStatusChange","filterStarChange","changePage","changePageSize","current","handleDelete","row","res","success","handleEdit","Object","assign","handleOk","_","formRef","validateFields","err","fieldsValue","values","padStart","resetFields","catch","handleCancel","className","defaultActiveKey","header","key","layout","onChange","icon","onClick","bordered","rowKey","record","dataSource","pagination","dataIndex","align","sorter","a","b","render","color","text","shape","bind","pageSizeOptions","showTotal","onShowSizeChange","showSizeChanger","showQuickJumper","hideOnSinglePage","wrappedComponentRef"],"mappings":"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","file":"static/js/Table.6061c1de.chunk.js","sourcesContent":["import request from '../utils/request'\r\nexport function tableList(data) {\r\n  return request({\r\n    url: '/table/list',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\nexport function deleteItem(data) {\r\n  return request({\r\n    url: '/table/delete',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\nexport function editItem(data) {\r\n  return request({\r\n    url: '/table/edit',\r\n    method: 'post',\r\n    data\r\n  })\r\n}","import React, { Component } from \"react\";\r\nimport { Form, Input, DatePicker, Select, Rate, Modal } from \"antd\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/zh-cn\";\r\nmoment.locale(\"zh-cn\");\r\nclass EditForm extends Component {\r\n  render() {\r\n    const {\r\n      visible,\r\n      onCancel,\r\n      onOk,\r\n      form,\r\n      confirmLoading,\r\n      currentRowData,\r\n    } = this.props;\r\n    const { getFieldDecorator } = form;\r\n    const { id, author, date, readings, star, status, title } = currentRowData;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        sm: { span: 4 },\r\n      },\r\n      wrapperCol: {\r\n        sm: { span: 16 },\r\n      },\r\n    };\r\n    return (\r\n      <Modal\r\n        title=\"编辑\"\r\n        visible={visible}\r\n        onCancel={onCancel}\r\n        onOk={onOk}\r\n        confirmLoading={confirmLoading}\r\n      >\r\n        <Form {...formItemLayout}>\r\n          <Form.Item label=\"序号:\">\r\n            {getFieldDecorator(\"id\", {\r\n              initialValue: id,\r\n            })(<Input disabled />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"标题:\">\r\n            {getFieldDecorator(\"title\", {\r\n              rules: [{ required: true, message: \"请输入标题!\" }],\r\n              initialValue: title,\r\n            })(<Input placeholder=\"标题\" />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"作者:\">\r\n            {getFieldDecorator(\"author\", {\r\n              initialValue: author,\r\n            })(<Input disabled />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"阅读量:\">\r\n            {getFieldDecorator(\"readings\", {\r\n              initialValue: readings,\r\n            })(<Input disabled />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"推荐指数:\">\r\n            {getFieldDecorator(\"star\", {\r\n              initialValue: star.length,\r\n            })(<Rate count={3} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"状态:\">\r\n            {getFieldDecorator(\"status\", {\r\n              initialValue: status,\r\n            })(\r\n              <Select style={{ width: 120 }}>\r\n                <Select.Option value=\"published\">published</Select.Option>\r\n                <Select.Option value=\"draft\">draft</Select.Option>\r\n              </Select>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label=\"时间:\">\r\n            {getFieldDecorator(\"date\", {\r\n              rules: [{ type: 'object', required: true, message: '请选择时间!' }],\r\n              initialValue: moment(date || \"YYYY-MM-DD HH:mm:ss\"),\r\n            })(<DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />)}\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create({ name: \"EditForm\" })(EditForm);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Table,\r\n  Tag,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Collapse,\r\n  Pagination,\r\n  Divider,\r\n  message,\r\n  Select\r\n} from \"antd\";\r\nimport { tableList, deleteItem,editItem } from \"../../api/table\";\r\nimport EditForm from \"./forms/editForm\"\r\nconst { Column } = Table;\r\nconst { Panel } = Collapse;\r\nclass TableComponent extends Component {\r\n  _isMounted = false; // 这个变量是用来标志当前组件是否挂载\r\n  state = {\r\n    list: [],\r\n    loading: false,\r\n    total: 0,\r\n    listQuery: {\r\n      pageNumber: 1,\r\n      pageSize: 10,\r\n      title: \"\",\r\n      star: \"\",\r\n      status:\"\"\r\n    },\r\n    editModalVisible: false,\r\n    editModalLoading: false,\r\n    currentRowData: {\r\n      id: 0,\r\n      author: \"\",\r\n      date: \"\",\r\n      readings: 0,\r\n      star: \"★\",\r\n      status: \"published\",\r\n      title: \"\"\r\n    }\r\n  };\r\n  fetchData = () => {\r\n    this.setState({ loading: true });\r\n    tableList(this.state.listQuery).then((response) => {\r\n      this.setState({ loading: false });\r\n      const list = response.data.data.items;\r\n      const total = response.data.data.total;\r\n      if (this._isMounted) {\r\n        this.setState({ list, total });\r\n      }\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.fetchData();\r\n  }\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n  filterTitleChange = (e) => {\r\n    let value = e.target.value\r\n    this.setState((state) => ({\r\n      listQuery: {\r\n        ...state.listQuery,\r\n        title:value,\r\n      }\r\n    }));\r\n  };\r\n  filterStatusChange = (value) => {\r\n    this.setState((state) => ({\r\n      listQuery: {\r\n        ...state.listQuery,\r\n        status:value,\r\n      }\r\n    }));\r\n  };\r\n  filterStarChange  = (value) => {\r\n    this.setState((state) => ({\r\n      listQuery: {\r\n        ...state.listQuery,\r\n        star:value,\r\n      }\r\n    }));\r\n  };\r\n  changePage = (pageNumber, pageSize) => {\r\n    this.setState(\r\n      (state) => ({\r\n        listQuery: {\r\n          ...state.listQuery,\r\n          pageNumber,\r\n        },\r\n      }),\r\n      () => {\r\n        this.fetchData();\r\n      }\r\n    );\r\n  };\r\n  changePageSize = (current, pageSize) => {\r\n    this.setState(\r\n      (state) => ({\r\n        listQuery: {\r\n          ...state.listQuery,\r\n          pageNumber: 1,\r\n          pageSize,\r\n        },\r\n      }),\r\n      () => {\r\n        this.fetchData();\r\n      }\r\n    );\r\n  };\r\n  handleDelete = (row) => {\r\n    deleteItem({id:row.id}).then(res => {\r\n      message.success(\"删除成功\")\r\n      this.fetchData();\r\n    })\r\n  }\r\n  handleEdit = (row) => {\r\n    this.setState({\r\n      currentRowData:Object.assign({}, row),\r\n      editModalVisible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = _ => {\r\n    const { form } = this.formRef.props;\r\n    form.validateFields((err, fieldsValue) => {\r\n      if (err) {\r\n        return;\r\n      }\r\n      const values = {\r\n        ...fieldsValue,\r\n        'star': \"\".padStart(fieldsValue['star'], '★'),\r\n        'date': fieldsValue['date'].format('YYYY-MM-DD HH:mm:ss'),\r\n      };\r\n      this.setState({ editModalLoading: true, });\r\n      editItem(values).then((response) => {\r\n        form.resetFields();\r\n        this.setState({ editModalVisible: false, editModalLoading: false });\r\n        message.success(\"编辑成功!\")\r\n        this.fetchData()\r\n      }).catch(e => {\r\n        message.success(\"编辑失败,请重试!\")\r\n      })\r\n      \r\n    });\r\n  };\r\n\r\n  handleCancel = _ => {\r\n    this.setState({\r\n      editModalVisible: false,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"app-container\">\r\n        <Collapse defaultActiveKey={[\"1\"]}>\r\n          <Panel header=\"筛选\" key=\"1\">\r\n            <Form layout=\"inline\">\r\n              <Form.Item label=\"标题:\">\r\n                <Input onChange={this.filterTitleChange} />\r\n              </Form.Item>\r\n              <Form.Item label=\"类型:\">\r\n                <Select\r\n                  style={{ width: 120 }}\r\n                  onChange={this.filterStatusChange}>\r\n                  <Select.Option value=\"published\">published</Select.Option>\r\n                  <Select.Option value=\"draft\">draft</Select.Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item label=\"推荐指数:\">\r\n                <Select\r\n                  style={{ width: 120 }}\r\n                  onChange={this.filterStarChange}>\r\n                  <Select.Option value={1}>★</Select.Option>\r\n                  <Select.Option value={2}>★★</Select.Option>\r\n                  <Select.Option value={3}>★★★</Select.Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button type=\"primary\" icon=\"search\" onClick={this.fetchData}>\r\n                  搜索\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Panel>\r\n        </Collapse>\r\n        <br />\r\n        <Table\r\n          bordered\r\n          rowKey={(record) => record.id}\r\n          dataSource={this.state.list}\r\n          loading={this.state.loading}\r\n          pagination={false}\r\n        >\r\n          <Column title=\"序号\" dataIndex=\"id\" key=\"id\" width={200} align=\"center\" sorter={(a, b) => a.id - b.id}/>\r\n          <Column title=\"标题\" dataIndex=\"title\" key=\"title\" width={200} align=\"center\"/>\r\n          <Column title=\"作者\" dataIndex=\"author\" key=\"author\" width={100} align=\"center\"/>\r\n          <Column title=\"阅读量\" dataIndex=\"readings\" key=\"readings\" width={195} align=\"center\"/>\r\n          <Column title=\"推荐指数\" dataIndex=\"star\" key=\"star\" width={195} align=\"center\"/>\r\n          <Column title=\"状态\" dataIndex=\"status\" key=\"status\" width={195} align=\"center\" render={(status) => {\r\n            let color =\r\n              status === \"published\" ? \"green\" : status === \"deleted\" ? \"red\" : \"\";\r\n            return (\r\n              <Tag color={color} key={status}>\r\n                {status}\r\n              </Tag>\r\n            );\r\n          }}/>\r\n          <Column title=\"时间\" dataIndex=\"date\" key=\"date\" width={195} align=\"center\"/>\r\n          <Column title=\"操作\" key=\"action\" width={195} align=\"center\"render={(text, row) => (\r\n            <span>\r\n              <Button type=\"primary\" shape=\"circle\" icon=\"edit\" title=\"编辑\" onClick={this.handleEdit.bind(null,row)}/>\r\n              <Divider type=\"vertical\" />\r\n              <Button type=\"primary\" shape=\"circle\" icon=\"delete\" title=\"删除\" onClick={this.handleDelete.bind(null,row)}/>\r\n            </span>\r\n          )}/>\r\n        </Table>\r\n        <br />\r\n        <Pagination\r\n          total={this.state.total}\r\n          pageSizeOptions={[\"10\", \"20\", \"40\"]}\r\n          showTotal={(total) => `共${total}条数据`}\r\n          onChange={this.changePage}\r\n          current={this.state.listQuery.pageNumber}\r\n          onShowSizeChange={this.changePageSize}\r\n          showSizeChanger\r\n          showQuickJumper\r\n          hideOnSinglePage={true}\r\n        />\r\n        <EditForm\r\n          currentRowData={this.state.currentRowData}\r\n          wrappedComponentRef={formRef => this.formRef = formRef}\r\n          visible={this.state.editModalVisible}\r\n          confirmLoading={this.state.editModalLoading}\r\n          onCancel={this.handleCancel}\r\n          onOk={this.handleOk}\r\n        />  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableComponent;\r\n"],"sourceRoot":""}