{"version":3,"sources":["views/charts/mixChart.jsx","lib/echarts.js"],"names":["MixChart","state","chart","debounce","this","initChart","bind","window","addEventListener","resize","nextProps","sidebarCollapsed","props","dispose","removeEventListener","setState","xData","data","i","push","setOption","backgroundColor","title","text","x","top","textStyle","color","fontSize","subtextStyle","tooltip","trigger","axisPointer","grid","left","right","borderWidth","bottom","legend","calculable","xAxis","type","axisLine","lineStyle","splitLine","show","axisTick","splitArea","axisLabel","interval","yAxis","dataZoom","height","xAxisIndex","start","end","handleIcon","handleSize","handleStyle","borderColor","series","name","stack","barMaxWidth","barGap","itemStyle","normal","label","position","formatter","p","value","barBorderRadius","symbolSize","symbol","el","echarts","init","setOptions","style","width","className","ref","Component","connect","app","require"],"mappings":"gMAIMA,E,4MACJC,MAAQ,CACNC,MAAO,M,kEAGY,IAAD,OAClBC,YAASC,KAAKC,UAAUC,KAAKF,MAAO,IAApCD,GACAI,OAAOC,iBAAiB,UAAU,kBAAM,EAAKC,c,gDAErBC,GACpBA,EAAUC,mBAAqBP,KAAKQ,MAAMD,kBAC5CP,KAAKK,W,6CAKPL,KAAKS,Y,+BAIL,IAAMX,EAAQE,KAAKH,MAAMC,MACrBA,GACFC,YAASD,EAAMO,OAAOH,KAAKF,MAAO,IAAlCD,K,gCAIO,IAAD,OACHC,KAAKH,MAAMC,QAGhBK,OAAOO,oBAAoB,UAAU,kBAAM,EAAKL,YAChDL,KAAKW,SAAS,CAAEb,MAAO,U,mCAIvB,IAAMc,EAAS,WAEb,IADA,IAAMC,EAAO,GACJC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAKE,KAAKD,EAAI,SAEhB,OAAOD,EALM,GAOfb,KAAKH,MAAMC,MAAMkB,UAAU,CACzBC,gBAAiB,UACjBC,MAAO,CACLC,KAAM,aACNC,EAAG,KACHC,IAAK,KACLC,UAAW,CACTC,MAAO,OACPC,SAAU,MAEZC,aAAc,CACZF,MAAO,UACPC,SAAU,OAGdE,QAAS,CACPC,QAAS,OACTC,YAAa,CACXN,UAAW,CACTC,MAAO,UAIbM,KAAM,CACJC,KAAM,KACNC,MAAO,KACPC,YAAa,EACbX,IAAK,IACLY,OAAQ,GACRX,UAAW,CACTC,MAAO,SAGXW,OAAQ,CACNd,EAAG,KACHC,IAAK,MACLC,UAAW,CACTC,MAAO,WAETV,KAAM,CAAC,SAAU,OAAQ,YAE3BsB,YAAY,EACZC,MAAO,CACL,CACEC,KAAM,WACNC,SAAU,CACRC,UAAW,CACThB,MAAO,YAGXiB,UAAW,CACTC,MAAM,GAERC,SAAU,CACRD,MAAM,GAERE,UAAW,CACTF,MAAM,GAERG,UAAW,CACTC,SAAU,GAEZhC,KAAMD,IAGVkC,MAAO,CACL,CACET,KAAM,QACNG,UAAW,CACTC,MAAM,GAERH,SAAU,CACRC,UAAW,CACThB,MAAO,YAGXmB,SAAU,CACRD,MAAM,GAERG,UAAW,CACTC,SAAU,GAEZF,UAAW,CACTF,MAAM,KAIZM,SAAU,CACR,CACEN,MAAM,EACNO,OAAQ,GACRC,WAAY,CAAC,GACbhB,OAAQ,GACRiB,MAAO,GACPC,IAAK,GACLC,WACE,2GACFC,WAAY,OACZC,YAAa,CACX/B,MAAO,WAETD,UAAW,CACTC,MAAO,QAETgC,YAAa,WAEf,CACElB,KAAM,SACNI,MAAM,EACNO,OAAQ,GACRE,MAAO,EACPC,IAAK,KAGTK,OAAQ,CACN,CACEC,KAAM,SACNpB,KAAM,MACNqB,MAAO,QACPC,YAAa,GACbC,OAAQ,MACRC,UAAW,CACTC,OAAQ,CACNvC,MAAO,sBACPwC,MAAO,CACLtB,MAAM,EACNnB,UAAW,CACTC,MAAO,QAETyC,SAAU,YACVC,UANK,SAMKC,GACR,OAAOA,EAAEC,MAAQ,EAAID,EAAEC,MAAQ,OAKvCtD,KAAM,CACJ,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAIJ,CACE4C,KAAM,OACNpB,KAAM,MACNqB,MAAO,QACPG,UAAW,CACTC,OAAQ,CACNvC,MAAO,oBACP6C,gBAAiB,EACjBL,MAAO,CACLtB,MAAM,EACNuB,SAAU,MACVC,UAHK,SAGKC,GACR,OAAOA,EAAEC,MAAQ,EAAID,EAAEC,MAAQ,OAKvCtD,KAAM,CACJ,IACA,KACA,IACA,KACA,IACA,IACA,IACA,KACA,KACA,IACA,IACA,MAGJ,CACE4C,KAAM,UACNpB,KAAM,OACNqB,MAAO,QACPW,WAAY,GACZC,OAAQ,SACRT,UAAW,CACTC,OAAQ,CACNvC,MAAO,qBACP6C,gBAAiB,EACjBL,MAAO,CACLtB,MAAM,EACNuB,SAAU,MACVC,UAHK,SAGKC,GACR,OAAOA,EAAEC,MAAQ,EAAID,EAAEC,MAAQ,OAKvCtD,KAAM,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,Y,kCAOG,IAAD,OACLb,KAAKuE,IACVvE,KAAKW,SAAS,CAAEb,MAAO0E,IAAQC,KAAKzE,KAAKuE,GAAI,cAAe,WAC1D,EAAKG,kB,+BAGC,IAAD,OACP,OACE,yBACEC,MAAO,CAAEC,MAAO,OAAQ5B,OAAQ,uBAChC6B,UAAU,iBAEV,yBACEF,MAAO,CAAEC,MAAO,OAAQ5B,OAAQ,QAChC8B,IAAK,SAACP,GAAD,OAAS,EAAKA,GAAKA,U,GAtRXQ,aA6RRC,uBAAQ,SAACnF,GAAD,OAAWA,EAAMoF,MAAzBD,CAA8BpF,I,iCCjS7C,gEAYAsF,EAAQ,KACOV,MAAf","file":"static/js/MixChart.306b395a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport echarts from \"../../lib/echarts\";\r\nimport { debounce } from \"../../utils\";\r\nclass MixChart extends Component {\r\n  state = {\r\n    chart: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    debounce(this.initChart.bind(this), 300)();\r\n    window.addEventListener(\"resize\", () => this.resize());\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.sidebarCollapsed !== this.props.sidebarCollapsed) {\r\n      this.resize();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.dispose();\r\n  }\r\n\r\n  resize() {\r\n    const chart = this.state.chart;\r\n    if (chart) {\r\n      debounce(chart.resize.bind(this), 300)();\r\n    }\r\n  }\r\n\r\n  dispose() {\r\n    if (!this.state.chart) {\r\n      return;\r\n    }\r\n    window.removeEventListener(\"resize\", () => this.resize()); // 移除窗口，变化时重置图表\r\n    this.setState({ chart: null });\r\n  }\r\n\r\n  setOptions() {\r\n    const xData = (function () {\r\n      const data = [];\r\n      for (let i = 1; i < 13; i++) {\r\n        data.push(i + \"month\");\r\n      }\r\n      return data;\r\n    })();\r\n    this.state.chart.setOption({\r\n      backgroundColor: \"#344b58\",\r\n      title: {\r\n        text: \"statistics\",\r\n        x: \"20\",\r\n        top: \"20\",\r\n        textStyle: {\r\n          color: \"#fff\",\r\n          fontSize: \"22\",\r\n        },\r\n        subtextStyle: {\r\n          color: \"#90979c\",\r\n          fontSize: \"16\",\r\n        },\r\n      },\r\n      tooltip: {\r\n        trigger: \"axis\",\r\n        axisPointer: {\r\n          textStyle: {\r\n            color: \"#fff\",\r\n          },\r\n        },\r\n      },\r\n      grid: {\r\n        left: \"5%\",\r\n        right: \"5%\",\r\n        borderWidth: 0,\r\n        top: 150,\r\n        bottom: 95,\r\n        textStyle: {\r\n          color: \"#fff\",\r\n        },\r\n      },\r\n      legend: {\r\n        x: \"5%\",\r\n        top: \"10%\",\r\n        textStyle: {\r\n          color: \"#90979c\",\r\n        },\r\n        data: [\"female\", \"male\", \"average\"],\r\n      },\r\n      calculable: true,\r\n      xAxis: [\r\n        {\r\n          type: \"category\",\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: \"#90979c\",\r\n            },\r\n          },\r\n          splitLine: {\r\n            show: false,\r\n          },\r\n          axisTick: {\r\n            show: false,\r\n          },\r\n          splitArea: {\r\n            show: false,\r\n          },\r\n          axisLabel: {\r\n            interval: 0,\r\n          },\r\n          data: xData,\r\n        },\r\n      ],\r\n      yAxis: [\r\n        {\r\n          type: \"value\",\r\n          splitLine: {\r\n            show: false,\r\n          },\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: \"#90979c\",\r\n            },\r\n          },\r\n          axisTick: {\r\n            show: false,\r\n          },\r\n          axisLabel: {\r\n            interval: 0,\r\n          },\r\n          splitArea: {\r\n            show: false,\r\n          },\r\n        },\r\n      ],\r\n      dataZoom: [\r\n        {\r\n          show: true,\r\n          height: 30,\r\n          xAxisIndex: [0],\r\n          bottom: 30,\r\n          start: 10,\r\n          end: 80,\r\n          handleIcon:\r\n            \"path://M306.1,413c0,2.2-1.8,4-4,4h-59.8c-2.2,0-4-1.8-4-4V200.8c0-2.2,1.8-4,4-4h59.8c2.2,0,4,1.8,4,4V413z\",\r\n          handleSize: \"110%\",\r\n          handleStyle: {\r\n            color: \"#d3dee5\",\r\n          },\r\n          textStyle: {\r\n            color: \"#fff\",\r\n          },\r\n          borderColor: \"#90979c\",\r\n        },\r\n        {\r\n          type: \"inside\",\r\n          show: true,\r\n          height: 15,\r\n          start: 1,\r\n          end: 35,\r\n        },\r\n      ],\r\n      series: [\r\n        {\r\n          name: \"female\",\r\n          type: \"bar\",\r\n          stack: \"total\",\r\n          barMaxWidth: 35,\r\n          barGap: \"10%\",\r\n          itemStyle: {\r\n            normal: {\r\n              color: \"rgba(255,144,128,1)\",\r\n              label: {\r\n                show: true,\r\n                textStyle: {\r\n                  color: \"#fff\",\r\n                },\r\n                position: \"insideTop\",\r\n                formatter(p) {\r\n                  return p.value > 0 ? p.value : \"\";\r\n                },\r\n              },\r\n            },\r\n          },\r\n          data: [\r\n            709,\r\n            1917,\r\n            2455,\r\n            2610,\r\n            1719,\r\n            1433,\r\n            1544,\r\n            3285,\r\n            5208,\r\n            3372,\r\n            2484,\r\n            4078,\r\n          ],\r\n        },\r\n\r\n        {\r\n          name: \"male\",\r\n          type: \"bar\",\r\n          stack: \"total\",\r\n          itemStyle: {\r\n            normal: {\r\n              color: \"rgba(0,191,183,1)\",\r\n              barBorderRadius: 0,\r\n              label: {\r\n                show: true,\r\n                position: \"top\",\r\n                formatter(p) {\r\n                  return p.value > 0 ? p.value : \"\";\r\n                },\r\n              },\r\n            },\r\n          },\r\n          data: [\r\n            327,\r\n            1776,\r\n            507,\r\n            1200,\r\n            800,\r\n            482,\r\n            204,\r\n            1390,\r\n            1001,\r\n            951,\r\n            381,\r\n            220,\r\n          ],\r\n        },\r\n        {\r\n          name: \"average\",\r\n          type: \"line\",\r\n          stack: \"total\",\r\n          symbolSize: 10,\r\n          symbol: \"circle\",\r\n          itemStyle: {\r\n            normal: {\r\n              color: \"rgba(252,230,48,1)\",\r\n              barBorderRadius: 0,\r\n              label: {\r\n                show: true,\r\n                position: \"top\",\r\n                formatter(p) {\r\n                  return p.value > 0 ? p.value : \"\";\r\n                },\r\n              },\r\n            },\r\n          },\r\n          data: [\r\n            1036,\r\n            3693,\r\n            2962,\r\n            3810,\r\n            2519,\r\n            1915,\r\n            1748,\r\n            4675,\r\n            6209,\r\n            4323,\r\n            2865,\r\n            4298,\r\n          ],\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  initChart() {\r\n    if (!this.el) return;\r\n    this.setState({ chart: echarts.init(this.el, \"macarons\") }, () => {\r\n      this.setOptions();\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{ width: \"100%\", height: \"calc(100vh - 100px)\" }}\r\n        className=\"app-container\"\r\n      >\r\n        <div\r\n          style={{ width: \"100%\", height: \"100%\" }}\r\n          ref={(el) => (this.el = el)}\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state) => state.app)(MixChart);\r\n","// 引入 ECharts 主模块\r\nimport echarts from 'echarts/lib/echarts'\r\n// 引入提示框和标题组件\r\nimport 'echarts/lib/component/legend'\r\nimport 'echarts/lib/component/title'\r\n\r\nimport 'echarts/lib/chart/bar'     // 引入柱状图\r\nimport 'echarts/lib/chart/radar'   // 引入雷达图\r\nimport 'echarts/lib/chart/pie'   // 引入饼状图\r\nimport 'echarts/lib/chart/line'   // 引入折线图\r\n\r\n\r\nrequire('echarts/theme/macarons') // echarts theme\r\nexport default echarts"],"sourceRoot":""}