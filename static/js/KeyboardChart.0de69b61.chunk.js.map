{"version":3,"sources":["views/charts/keyboard.jsx","lib/echarts.js"],"names":["KeyboardChart","state","chart","debounce","this","initChart","bind","window","addEventListener","resize","nextProps","sidebarCollapsed","props","dispose","removeEventListener","setState","xAxisData","data","data2","i","push","Math","sin","setOption","backgroundColor","grid","left","right","xAxis","show","visualMap","min","max","dimension","inRange","color","yAxis","axisLine","axisLabel","textStyle","splitLine","lineStyle","axisTick","series","name","type","z","itemStyle","normal","opacity","barBorderRadius","shadowBlur","shadowColor","showSymbol","animationDelay","animationEasing","animationDuration","areaStyle","xAxisIndex","animationEasingUpdate","idx","animationDelayUpdate","el","echarts","init","setOptions","style","width","height","className","ref","Component","connect","app","require"],"mappings":"gMAIMA,E,4MACJC,MAAQ,CACNC,MAAO,M,kEAGY,IAAD,OAClBC,YAASC,KAAKC,UAAUC,KAAKF,MAAO,IAApCD,GACAI,OAAOC,iBAAiB,UAAU,kBAAM,EAAKC,c,gDAErBC,GACpBA,EAAUC,mBAAqBP,KAAKQ,MAAMD,kBAC5CP,KAAKK,W,6CAKPL,KAAKS,Y,+BAIL,IAAMX,EAAQE,KAAKH,MAAMC,MACrBA,GACFC,YAASD,EAAMO,OAAOH,KAAKF,MAAO,IAAlCD,K,gCAIO,IAAD,OACHC,KAAKH,MAAMC,QAGhBK,OAAOO,oBAAoB,UAAU,kBAAM,EAAKL,YAChDL,KAAKW,SAAS,CAAEb,MAAO,U,mCAOvB,IAHA,IAAMc,EAAY,GACZC,EAAO,GACPC,EAAQ,GACLC,EAAI,EAAGA,EAAI,GAAIA,IACtBH,EAAUI,KAAKD,GACfF,EAAKG,KAAgD,GAA1CC,KAAKC,IAAIH,EAAI,IAAMA,EAAI,EAAI,IAAMA,EAAI,IAChDD,EAAME,KAAgD,GAA1CC,KAAKC,IAAIH,EAAI,IAAMA,EAAI,EAAI,IAAMA,EAAI,IAEnDf,KAAKH,MAAMC,MAAMqB,UAAU,CACzBC,gBAAiB,UACjBC,KAAM,CACJC,KAAM,KACNC,MAAO,MAETC,MAAO,CACL,CACEC,MAAM,EACNZ,KAAMD,GAER,CACEa,MAAM,EACNZ,KAAMD,IAGVc,UAAW,CACTD,MAAM,EACNE,IAAK,EACLC,IAAK,GACLC,UAAW,EACXC,QAAS,CACPC,MAAO,CACL,UACA,UACA,UACA,UACA,UACA,aAINC,MAAO,CACLC,SAAU,CACRR,MAAM,GAERS,UAAW,CACTC,UAAW,CACTJ,MAAO,YAGXK,UAAW,CACTX,MAAM,EACNY,UAAW,CACTN,MAAO,YAGXO,SAAU,CACRb,MAAM,IAGVc,OAAQ,CACN,CACEC,KAAM,OACNC,KAAM,MACN5B,KAAMC,EACN4B,EAAG,EACHC,UAAW,CACTC,OAAQ,CACNC,QAAS,GACTC,gBAAiB,EACjBC,WAAY,EACZC,YAAa,UAInB,CACER,KAAM,kBACNC,KAAM,OACN5B,OACA6B,EAAG,EACHO,YAAY,EACZC,eAAgB,EAChBC,gBAAiB,SACjBC,kBAAmB,KACnBf,UAAW,CACTO,OAAQ,CACNb,MAAO,gBAGXsB,UAAW,CACTT,OAAQ,CACNb,MAAO,UACPgB,WAAY,GACZC,YAAa,UAInB,CACER,KAAM,QACNC,KAAM,MACN5B,OACAyC,WAAY,EACZZ,EAAG,EACHC,UAAW,CACTC,OAAQ,CACNE,gBAAiB,MAKzBK,gBAAiB,aACjBI,sBAAuB,aACvBL,eAvGyB,SAuGVM,GACb,OAAa,GAANA,GAETC,qBA1GyB,SA0GJD,GACnB,OAAa,GAANA,O,kCAKA,IAAD,OACLxD,KAAK0D,IACV1D,KAAKW,SAAS,CAAEb,MAAO6D,IAAQC,KAAK5D,KAAK0D,GAAI,cAAe,WAC1D,EAAKG,kB,+BAGC,IAAD,OACP,OACE,yBACEC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,uBAChCC,UAAU,iBAEV,yBACEH,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChCE,IAAK,SAACR,GAAD,OAAS,EAAKA,GAAKA,U,GAzKNS,aAgLbC,uBAAQ,SAACvE,GAAD,OAAWA,EAAMwE,MAAzBD,CAA8BxE,I,iCCpL7C,gEAYA0E,EAAQ,KACOX,MAAf","file":"static/js/KeyboardChart.0de69b61.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport echarts from \"../../lib/echarts\";\r\nimport { debounce } from \"../../utils\";\r\nclass KeyboardChart extends Component {\r\n  state = {\r\n    chart: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    debounce(this.initChart.bind(this), 300)();\r\n    window.addEventListener(\"resize\", () => this.resize());\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.sidebarCollapsed !== this.props.sidebarCollapsed) {\r\n      this.resize();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.dispose();\r\n  }\r\n\r\n  resize() {\r\n    const chart = this.state.chart;\r\n    if (chart) {\r\n      debounce(chart.resize.bind(this), 300)();\r\n    }\r\n  }\r\n\r\n  dispose() {\r\n    if (!this.state.chart) {\r\n      return;\r\n    }\r\n    window.removeEventListener(\"resize\", () => this.resize()); // 移除窗口，变化时重置图表\r\n    this.setState({ chart: null });\r\n  }\r\n\r\n  setOptions() {\r\n    const xAxisData = [];\r\n    const data = [];\r\n    const data2 = [];\r\n    for (let i = 0; i < 50; i++) {\r\n      xAxisData.push(i);\r\n      data.push((Math.sin(i / 5) * (i / 5 - 10) + i / 6) * 5);\r\n      data2.push((Math.sin(i / 5) * (i / 5 + 10) + i / 6) * 3);\r\n    }\r\n    this.state.chart.setOption({\r\n      backgroundColor: \"#08263a\",\r\n      grid: {\r\n        left: \"5%\",\r\n        right: \"5%\",\r\n      },\r\n      xAxis: [\r\n        {\r\n          show: false,\r\n          data: xAxisData,\r\n        },\r\n        {\r\n          show: false,\r\n          data: xAxisData,\r\n        },\r\n      ],\r\n      visualMap: {\r\n        show: false,\r\n        min: 0,\r\n        max: 50,\r\n        dimension: 0,\r\n        inRange: {\r\n          color: [\r\n            \"#4a657a\",\r\n            \"#308e92\",\r\n            \"#b1cfa5\",\r\n            \"#f5d69f\",\r\n            \"#f5898b\",\r\n            \"#ef5055\",\r\n          ],\r\n        },\r\n      },\r\n      yAxis: {\r\n        axisLine: {\r\n          show: false,\r\n        },\r\n        axisLabel: {\r\n          textStyle: {\r\n            color: \"#4a657a\",\r\n          },\r\n        },\r\n        splitLine: {\r\n          show: true,\r\n          lineStyle: {\r\n            color: \"#08263f\",\r\n          },\r\n        },\r\n        axisTick: {\r\n          show: false,\r\n        },\r\n      },\r\n      series: [\r\n        {\r\n          name: \"back\",\r\n          type: \"bar\",\r\n          data: data2,\r\n          z: 1,\r\n          itemStyle: {\r\n            normal: {\r\n              opacity: 0.4,\r\n              barBorderRadius: 5,\r\n              shadowBlur: 3,\r\n              shadowColor: \"#111\",\r\n            },\r\n          },\r\n        },\r\n        {\r\n          name: \"Simulate Shadow\",\r\n          type: \"line\",\r\n          data,\r\n          z: 2,\r\n          showSymbol: false,\r\n          animationDelay: 0,\r\n          animationEasing: \"linear\",\r\n          animationDuration: 1200,\r\n          lineStyle: {\r\n            normal: {\r\n              color: \"transparent\",\r\n            },\r\n          },\r\n          areaStyle: {\r\n            normal: {\r\n              color: \"#08263a\",\r\n              shadowBlur: 50,\r\n              shadowColor: \"#000\",\r\n            },\r\n          },\r\n        },\r\n        {\r\n          name: \"front\",\r\n          type: \"bar\",\r\n          data,\r\n          xAxisIndex: 1,\r\n          z: 3,\r\n          itemStyle: {\r\n            normal: {\r\n              barBorderRadius: 5,\r\n            },\r\n          },\r\n        },\r\n      ],\r\n      animationEasing: \"elasticOut\",\r\n      animationEasingUpdate: \"elasticOut\",\r\n      animationDelay(idx) {\r\n        return idx * 20;\r\n      },\r\n      animationDelayUpdate(idx) {\r\n        return idx * 20;\r\n      },\r\n    });\r\n  }\r\n\r\n  initChart() {\r\n    if (!this.el) return;\r\n    this.setState({ chart: echarts.init(this.el, \"macarons\") }, () => {\r\n      this.setOptions();\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{ width: \"100%\", height: \"calc(100vh - 100px)\" }}\r\n        className=\"app-container\"\r\n      >\r\n        <div\r\n          style={{ width: \"100%\", height: \"100%\" }}\r\n          ref={(el) => (this.el = el)}\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state) => state.app)(KeyboardChart);\r\n","// 引入 ECharts 主模块\r\nimport echarts from 'echarts/lib/echarts'\r\n// 引入提示框和标题组件\r\nimport 'echarts/lib/component/legend'\r\nimport 'echarts/lib/component/title'\r\n\r\nimport 'echarts/lib/chart/bar'     // 引入柱状图\r\nimport 'echarts/lib/chart/radar'   // 引入雷达图\r\nimport 'echarts/lib/chart/pie'   // 引入饼状图\r\nimport 'echarts/lib/chart/line'   // 引入折线图\r\n\r\n\r\nrequire('echarts/theme/macarons') // echarts theme\r\nexport default echarts"],"sourceRoot":""}